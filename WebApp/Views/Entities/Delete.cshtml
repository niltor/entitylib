@model WebApp.Data.Entity.Entity

@{
    ViewData["Title"] = "Delete";
    var lib = Model.Lib;
}

<h3>Are you sure you want to delete this?</h3>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UpdatedTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class="col-sm-10">
            <div id="content"></div>
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index" asp-route-libId="@Model.Lib.Id">Back to List</a>
    </form>
</div>

@section Scripts{

    <script>var require = { paths: { 'vs': '/js/vs' } };</script>
    <script type="text/javascript" src="~/js/vs/loader.js"></script>
    <script>
        "use strict";
        const editorContainer = document.getElementById('content');
        editorContainer.style.minHeight = "600px";
        let editor = null;
        const content = `@Html.Raw(Model.Content)`;
        require(['vs/editor/editor.main'], function () {
            editor = monaco.editor.create(editorContainer, {
                theme: 'vs-dark',
                language: '@lib.Language',
                value: content,
                readOnly: true,
                minimap: { enabled: false }
            });
        });
    </script>

}
