@model WebApp.Data.Entity.Entity

@{
    ViewData["Title"] = "Edit";
    var lib = Model.Lib;
}
<head>
    <link href="~/js/vs/editor/editor.main.css" rel="stylesheet" />
</head>
<h4>Edit Entity</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <div id="content"></div>
                <textarea asp-for="Content" style="display:none" id="contentArea"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <button type="submit" class="btn btn-primary" id="submit">Save</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-libId="@lib.id">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>var require = { paths: { 'vs': '/js/vs' } };</script>
    <script type="text/javascript" src="~/js/vs/loader.js"></script>
    <script>
        "use strict";
        var editorContainer = document.getElementById('content');
        editorContainer.style.minHeight = "600px";
        var editor = null;
        const content = `@Html.Raw(Model.Content)`;
        require(['vs/editor/editor.main'], function () {
            editor = monaco.editor.create(editorContainer, {
                theme: 'vs-dark',
                language: '@lib.Language',
                value: content,
                minimap: { enabled: false }
            });
        });
    </script>
    <script>

        $("#submit").click(function (event) {
            const value = editor.getValue();
            $("#contentArea").text(value);
            return true;
        })
    </script>
}
